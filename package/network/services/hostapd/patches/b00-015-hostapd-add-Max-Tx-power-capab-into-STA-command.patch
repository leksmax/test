--- a/src/ap/ctrl_iface_ap.c
+++ b/src/ap/ctrl_iface_ap.c
@@ -246,6 +246,15 @@ static int hostapd_ctrl_iface_sta_mib(st
 					sta->supp_op_classes[0]);
 		len += os_snprintf(buf + len, buflen - len, "\n");
 	}
+	
+	if (sta->power_capab) {
+		ret = os_snprintf(buf + len, buflen - len,
+				  "min_txpower=%d\n"
+				  "max_txpower=%d\n",
+			 	  sta->min_tx_power, sta->max_tx_power);
+		if (!os_snprintf_error(buflen - len, ret))
+			len += ret;
+	}
 
 	return len;
 }
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -2619,6 +2619,14 @@ static u16 check_assoc_ies(struct hostap
 		os_memcpy(sta->rrm_enabled_capa, elems.rrm_enabled,
 			  sizeof(sta->rrm_enabled_capa));
 
+	if (elems.power_capab) {
+		sta->min_tx_power = elems.power_capab[0];
+		sta->max_tx_power = elems.power_capab[1];
+		sta->power_capab = 1;
+	} else {
+		sta->power_capab = 0;
+	}
+
 	return WLAN_STATUS_SUCCESS;
 }
 
--- a/src/ap/sta_info.h
+++ b/src/ap/sta_info.h
@@ -117,6 +117,7 @@ struct sta_info {
 	unsigned int ecsa_supported:1;
 	unsigned int added_unassoc:1;
 	unsigned int pending_wds_enable:1;
+	unsigned int power_capab:1;
 
 	u16 auth_alg;
 
@@ -218,6 +219,9 @@ struct sta_info {
 
 	u8 rrm_enabled_capa[5];
 
+	s8 min_tx_power;
+	s8 max_tx_power;
+
 #ifdef CONFIG_TAXONOMY
 	struct wpabuf *probe_ie_taxonomy;
 	struct wpabuf *assoc_ie_taxonomy;
--- a/src/common/ieee802_11_common.c
+++ b/src/common/ieee802_11_common.c
@@ -352,6 +352,10 @@ ParseRes ieee802_11_parse_elems(const u8
 			elems->rsn_ie_len = elen;
 			break;
 		case WLAN_EID_PWR_CAPABILITY:
+			if (elen < 2)
+				break;
+			elems->power_capab = pos;
+			elems->power_capab_len = elen;
 			break;
 		case WLAN_EID_SUPPORTED_CHANNELS:
 			elems->supp_channels = pos;
--- a/src/common/ieee802_11_common.h
+++ b/src/common/ieee802_11_common.h
@@ -79,6 +79,7 @@ struct ieee802_11_elems {
 	const u8 *fils_pk;
 	const u8 *fils_nonce;
 	const u8 *owe_dh;
+	const u8 *power_capab;
 
 	u8 ssid_len;
 	u8 supp_rates_len;
@@ -122,6 +123,7 @@ struct ieee802_11_elems {
 	u8 fils_wrapped_data_len;
 	u8 fils_pk_len;
 	u8 owe_dh_len;
+	u8 power_capab_len;
 
 	struct mb_ies_info mb_ies;
 };
