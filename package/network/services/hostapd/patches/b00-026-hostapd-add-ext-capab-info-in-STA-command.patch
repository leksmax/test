--- a/src/ap/ctrl_iface_ap.c
+++ b/src/ap/ctrl_iface_ap.c
@@ -318,6 +318,15 @@ static int hostapd_ctrl_iface_sta_mib(st
 			len += ret;
 	}
 
+	if (sta->ext_capability &&
+			buflen - len > (unsigned) (11 + 2 * sta->ext_capability[0])) {
+		len += os_snprintf(buf + len, buflen - len, "ext_capab=");
+		len += wpa_snprintf_hex(buf + len, buflen - len,
+				sta->ext_capability + 1,
+				sta->ext_capability[0]);
+		len += os_snprintf(buf + len, buflen - len, "\n");
+	}
+
 	return len;
 }
 
--- a/src/ap/ieee802_11.c
+++ b/src/ap/ieee802_11.c
@@ -2143,8 +2143,16 @@ static u16 check_ext_capab(struct hostap
 	}
 #endif /* CONFIG_INTERWORKING */
 
-	if (ext_capab_ie_len > 0)
+	if (ext_capab_ie_len > 0) {
 		sta->ecsa_supported = !!(ext_capab_ie[0] & BIT(2));
+		os_free(sta->ext_capability);
+		sta->ext_capability = os_malloc(1 + ext_capab_ie_len);
+		if (sta->ext_capability) {
+			sta->ext_capability[0] = ext_capab_ie_len;
+			os_memcpy(sta->ext_capability + 1, ext_capab_ie,
+					ext_capab_ie_len);
+		}
+	}
 
 	return WLAN_STATUS_SUCCESS;
 }
--- a/src/ap/sta_info.c
+++ b/src/ap/sta_info.c
@@ -357,6 +357,8 @@ void ap_free_sta(struct hostapd_data *ha
 	crypto_ecdh_deinit(sta->owe_ecdh);
 #endif /* CONFIG_OWE */
 
+	os_free(sta->ext_capability);
+
 	os_free(sta);
 }
 
--- a/src/ap/sta_info.h
+++ b/src/ap/sta_info.h
@@ -255,6 +255,8 @@ struct sta_info {
 	u16 owe_group;
 #endif /* CONFIG_OWE */
 
+	u8 *ext_capability;
+
 #ifdef CONFIG_TESTING_OPTIONS
 	enum wpa_alg last_tk_alg;
 	int last_tk_key_idx;
