--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -2656,6 +2656,26 @@ static int hostapd_ctrl_iface_remove_nei
 	return hostapd_neighbor_remove(hapd, bssid, &ssid);
 }
 
+static int hostapd_ctrl_iface_signal_monitor(struct hostapd_data *hapd,
+					     char *cmd)
+{
+	const char *pos;
+	int threshold = 0, hysteresis = 0;
+
+	pos = os_strstr(cmd, "THRESHOLD=");
+	if (pos)
+		threshold = atoi(pos + 10);
+	pos = os_strstr(cmd, "HYSTERESIS=");
+	if (pos)
+		hysteresis = atoi(pos + 11);
+
+	if (hapd->driver->signal_monitor)
+		return hapd->driver->signal_monitor(hapd->drv_priv,
+						    threshold, hysteresis);
+
+	return -1;
+}
+
 
 static int hostapd_ctrl_driver_flags(struct hostapd_iface *iface, char *buf,
 				     size_t buflen)
@@ -3136,6 +3156,9 @@ static int hostapd_ctrl_iface_receive_pr
 	} else if(os_strncmp(buf, "BLACKLIST_CLEAR", 15) == 0) {
 		if (hostapd_ctrl_iface_blacklist_clear(hapd))
 			reply_len = -1;
+	} else if (os_strncmp(buf, "SIGNAL_MONITOR", 14) == 0) {
+		if (hostapd_ctrl_iface_signal_monitor(hapd, buf + 14))
+			reply_len = -1;
 	} else {
 		os_memcpy(reply, "UNKNOWN COMMAND\n", 16);
 		reply_len = 16;
--- a/hostapd/hostapd_cli.c
+++ b/hostapd/hostapd_cli.c
@@ -1499,6 +1499,11 @@ static int hostapd_cli_cmd_poll_client(s
 	return wpa_ctrl_command(ctrl, buf);
 }
 
+static int hostapd_cli_cmd_signal_monitor(struct wpa_ctrl *ctrl, int argc,
+					  char *argv[])
+{
+	return hostapd_cli_cmd(ctrl, "SIGNAL_MONITOR", 0, argc, argv);
+}
 
 struct hostapd_cli_cmd {
 	const char *cmd;
@@ -1666,6 +1671,8 @@ static const struct hostapd_cli_cmd host
 	  "Show blacklisted mac address list "},
 	{ "blacklist_clear", hostapd_cli_cmd_blacklist_clear, NULL,
 	  "clear blacklist mac address list "},
+	{ "signal_monitor", hostapd_cli_cmd_signal_monitor, NULL,
+	  "= set signal monitor parameters" },
 	{ NULL, NULL, NULL, NULL }
 };
 
