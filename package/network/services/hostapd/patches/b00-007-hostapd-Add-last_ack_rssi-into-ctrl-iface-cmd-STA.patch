From 0218acd3f5cf506fc7ccc9f1a403c9a8b2ee344d Mon Sep 17 00:00:00 2001
From: Bhagavathi Perumal S <bperumal@codeaurora.org>
Date: Mon, 16 Oct 2017 11:33:56 +0530
Subject: [PATCH] hostapd: Add last_ack_rssi into ctrl iface cmd STA

This allow external application to get last ack signal strength of last
transmitted frame.

Signed-off-by: Bhagavathi Perumal S <bperumal@codeaurora.org>
---
 hostapd/hostapd_cli.c        |   14 ++++++++++++++
 src/ap/ctrl_iface_ap.c       |    6 ++++--
 src/drivers/driver_nl80211.c |    4 ++++
 src/drivers/nl80211_copy.h   |    1 +
 4 files changed, 23 insertions(+), 2 deletions(-)

--- a/hostapd/hostapd_cli.c
+++ b/hostapd/hostapd_cli.c
@@ -1436,6 +1436,19 @@ static int hostapd_cli_cmd_dpp_pkex_remo
 #endif /* CONFIG_DPP */
 
 
+static int hostapd_cli_cmd_poll_client(struct wpa_ctrl *ctrl, int argc, char *argv[])
+{
+	char buf[64];
+	if (argc < 1) {
+		printf("Invalid 'poll_sta' command - at least one argument, "
+		       "poll_sta address, is required.\n");
+		return -1;
+	}
+	snprintf(buf, sizeof(buf), "POLL_STA %s", argv[0]);
+	return wpa_ctrl_command(ctrl, buf);
+}
+
+
 struct hostapd_cli_cmd {
 	const char *cmd;
 	int (*handler)(struct wpa_ctrl *ctrl, int argc, char *argv[]);
@@ -1592,6 +1605,8 @@ static const struct hostapd_cli_cmd host
 	{ "dpp_pkex_remove", hostapd_cli_cmd_dpp_pkex_remove, NULL,
 	  "*|<id> = remove DPP pkex information" },
 #endif /* CONFIG_DPP */
+	{ "poll_client", hostapd_cli_cmd_poll_client, NULL,
+	  "<addr> = send QOS null frame to a station"},
 	{ NULL, NULL, NULL, NULL }
 };
 
--- a/src/ap/ctrl_iface_ap.c
+++ b/src/ap/ctrl_iface_ap.c
@@ -108,9 +108,10 @@ static int hostapd_get_sta_tx_rx(struct
 		if (!os_snprintf_error(buflen - len, ret))
 			len += ret;
 	}
-	ret = os_snprintf(buf + len, buflen - len, "\n");
-	if (!os_snprintf_error(buflen - len, ret))
-		len += ret;
+	ret = os_snprintf(buf + len, buflen - len, "last_ack_signal=%d\n",
+			  data.last_ack_rssi);
+		if(!os_snprintf_error(buflen - len, ret))
+			len += ret;
 
 	return len;
 }
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -5993,6 +5993,7 @@ static int get_sta_handler(struct nl_msg
 		[NL80211_STA_INFO_RX_BYTES64] = { .type = NLA_U64 },
 		[NL80211_STA_INFO_TX_BYTES64] = { .type = NLA_U64 },
 		[NL80211_STA_INFO_SIGNAL] = { .type = NLA_U8 },
+		[NL80211_STA_INFO_ACK_SIGNAL] = { .type = NLA_U32 },
 	};
 	struct nlattr *rate[NL80211_RATE_INFO_MAX + 1];
 	static struct nla_policy rate_policy[NL80211_RATE_INFO_MAX + 1] = {
@@ -6055,7 +6056,9 @@ static int get_sta_handler(struct nl_msg
 			nla_get_u32(stats[NL80211_STA_INFO_TX_FAILED]);
 	if (stats[NL80211_STA_INFO_SIGNAL])
 		data->signal = nla_get_u8(stats[NL80211_STA_INFO_SIGNAL]);
-
+	if (stats[NL80211_STA_INFO_ACK_SIGNAL])
+		data->last_ack_rssi =
+			nla_get_u32(stats[NL80211_STA_INFO_ACK_SIGNAL]);
 	if (stats[NL80211_STA_INFO_TX_BITRATE] &&
 	    nla_parse_nested(rate, NL80211_RATE_INFO_MAX,
 			     stats[NL80211_STA_INFO_TX_BITRATE],
--- a/src/drivers/nl80211_copy.h
+++ b/src/drivers/nl80211_copy.h
@@ -2858,6 +2858,7 @@ enum nl80211_sta_info {
 	NL80211_STA_INFO_TID_STATS,
 	NL80211_STA_INFO_RX_DURATION,
 	NL80211_STA_INFO_PAD,
+	NL80211_STA_INFO_ACK_SIGNAL,
 
 	/* keep last */
 	__NL80211_STA_INFO_AFTER_LAST,
