Index: backports-20171004-3.14.77-c09dbd7/drivers/net/wireless/ath/ath10k/bmi.h
===================================================================
--- backports-20171004-3.14.77-c09dbd7.orig/drivers/net/wireless/ath/ath10k/bmi.h
+++ backports-20171004-3.14.77-c09dbd7/drivers/net/wireless/ath/ath10k/bmi.h
@@ -86,6 +86,10 @@ enum bmi_cmd_id {
 #define BMI_PARAM_GET_FLASH_BOARD_ID 0x8000
 #define BMI_PARAM_FLASH_SECTION_ALL 0x10000
 
+/* Dual-band Param IDs */
+#define BMI_PARAM_DUAL_BAND_2G 0x40000
+#define BMI_PARAM_DUAL_BAND_5G 0x80000
+
 #define ATH10K_BMI_BOARD_ID_FROM_OTP_MASK   0x7c00
 #define ATH10K_BMI_BOARD_ID_FROM_OTP_LSB    10
 
Index: backports-20171004-3.14.77-c09dbd7/drivers/net/wireless/ath/ath10k/core.c
===================================================================
--- backports-20171004-3.14.77-c09dbd7.orig/drivers/net/wireless/ath/ath10k/core.c
+++ backports-20171004-3.14.77-c09dbd7/drivers/net/wireless/ath/ath10k/core.c
@@ -38,6 +38,7 @@
 
 unsigned int ath10k_debug_mask;
 static unsigned int ath10k_cryptmode_param;
+static unsigned int ath10k_dual_band_config;
 static bool uart_print;
 static bool skip_otp;
 static bool rawmode;
@@ -47,6 +48,7 @@ static bool ethernet_mode = true;
 
 module_param_named(debug_mask, ath10k_debug_mask, uint, 0644);
 module_param_named(cryptmode, ath10k_cryptmode_param, uint, 0644);
+module_param_named(dual_band, ath10k_dual_band_config, uint, 0644);
 module_param(uart_print, bool, 0644);
 module_param(skip_otp, bool, 0644);
 module_param(rawmode, bool, 0644);
@@ -59,6 +61,7 @@ MODULE_PARM_DESC(debug_mask, "Debugging
 MODULE_PARM_DESC(uart_print, "Uart target debugging");
 MODULE_PARM_DESC(skip_otp, "Skip otp failure for calibration in testmode");
 MODULE_PARM_DESC(cryptmode, "Crypto mode: 0-hardware, 1-software");
+MODULE_PARM_DESC(dual_band, "Ath10k dual-band config: 2 - 2.4Ghz, 5 - 5Ghz");
 MODULE_PARM_DESC(rawmode, "Use raw 802.11 frame datapath");
 MODULE_PARM_DESC(bug_on_fw_assert, "Bug on firmware assert");
 MODULE_PARM_DESC(enable_smart_antenna, "Enable smart antenna supprot in fw");
@@ -898,6 +901,17 @@ static int ath10k_core_get_board_id_from
 	else
 		bmi_board_id_param = BMI_PARAM_GET_EEPROM_BOARD_ID;
 
+        /* Select radio band from user module-param 'dual_band' */
+        if (ath10k_dual_band_config == 2) {
+            bmi_board_id_param |= BMI_PARAM_DUAL_BAND_2G;
+            ath10k_dbg(ar, ATH10K_DBG_BOOT,
+                       "Dual-band configuring with 2.4Ghz");
+        } else if (ath10k_dual_band_config == 5) {
+            bmi_board_id_param |= BMI_PARAM_DUAL_BAND_5G;
+            ath10k_dbg(ar, ATH10K_DBG_BOOT,
+                       "Dual-band configuring with 5Ghz");
+        }
+
 	ret = ath10k_bmi_execute(ar, address, bmi_board_id_param, &result);
 	if (ret) {
 		ath10k_err(ar, "could not execute otp for board id check: %d\n",
@@ -1035,6 +1049,17 @@ static int ath10k_download_and_run_otp(s
 	if (ar->cal_mode == ATH10K_PRE_CAL_MODE_FLASH_MTD)
 		bmi_otp_exe_param = BMI_PARAM_FLASH_SECTION_ALL;
 
+        /* Select radio band from user module-param 'dual_band' */
+        if (ath10k_dual_band_config == 2) {
+            bmi_otp_exe_param |= BMI_PARAM_DUAL_BAND_2G;
+            ath10k_dbg(ar, ATH10K_DBG_BOOT,
+                       "Dual-band OTP with 2.4Ghz");
+        } else if (ath10k_dual_band_config == 5) {
+            bmi_otp_exe_param |= BMI_PARAM_DUAL_BAND_5G;
+            ath10k_dbg(ar, ATH10K_DBG_BOOT,
+                       "Dual-band OTP with 5Ghz");
+        }
+	
 	ret = ath10k_bmi_execute(ar, address, bmi_otp_exe_param, &result);
 	if (ret) {
 		ath10k_err(ar, "could not execute otp (%d)\n", ret);
